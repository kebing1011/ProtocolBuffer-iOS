// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "UserInfo.pb.h"
// @@protoc_insertion_point(imports)

@implementation UserInfoRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [UserInfoRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL UserStatusIsValidValue(UserStatus value) {
  switch (value) {
    case UserStatusOffline:
    case UserStatusOnline:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromUserStatus(UserStatus value) {
  switch (value) {
    case UserStatusOffline:
      return @"UserStatusOffline";
    case UserStatusOnline:
      return @"UserStatusOnline";
    default:
      return nil;
  }
}

@interface UserInfo ()
@property SInt64 acctId;
@property (strong) NSString* name;
@property UserStatus status;
@end

@implementation UserInfo

- (BOOL) hasAcctId {
  return !!hasAcctId_;
}
- (void) setHasAcctId:(BOOL) _value_ {
  hasAcctId_ = !!_value_;
}
@synthesize acctId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (instancetype) init {
  if ((self = [super init])) {
    self.acctId = 0L;
    self.name = @"";
    self.status = UserStatusOffline;
  }
  return self;
}
static UserInfo* defaultUserInfoInstance = nil;
+ (void) initialize {
  if (self == [UserInfo class]) {
    defaultUserInfoInstance = [[UserInfo alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultUserInfoInstance;
}
- (instancetype) defaultInstance {
  return defaultUserInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasAcctId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasStatus) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAcctId) {
    [output writeInt64:1 value:self.acctId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasStatus) {
    [output writeEnum:3 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAcctId) {
    size_ += computeInt64Size(1, self.acctId);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(3, self.status);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (UserInfo*) parseFromData:(NSData*) data {
  return (UserInfo*)[[[UserInfo builder] mergeFromData:data] build];
}
+ (UserInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserInfo*)[[[UserInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserInfo*) parseFromInputStream:(NSInputStream*) input {
  return (UserInfo*)[[[UserInfo builder] mergeFromInputStream:input] build];
}
+ (UserInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserInfo*)[[[UserInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserInfo*)[[[UserInfo builder] mergeFromCodedInputStream:input] build];
}
+ (UserInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserInfo*)[[[UserInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserInfoBuilder*) builder {
  return [[UserInfoBuilder alloc] init];
}
+ (UserInfoBuilder*) builderWithPrototype:(UserInfo*) prototype {
  return [[UserInfo builder] mergeFrom:prototype];
}
- (UserInfoBuilder*) builder {
  return [UserInfo builder];
}
- (UserInfoBuilder*) toBuilder {
  return [UserInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAcctId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"acctId", [NSNumber numberWithLongLong:self.acctId]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", NSStringFromUserStatus(self.status)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasAcctId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.acctId] forKey: @"acctId"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasStatus) {
    [dictionary setObject: @(self.status) forKey: @"status"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[UserInfo class]]) {
    return NO;
  }
  UserInfo *otherMessage = other;
  return
      self.hasAcctId == otherMessage.hasAcctId &&
      (!self.hasAcctId || self.acctId == otherMessage.acctId) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasAcctId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.acctId] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface UserInfoBuilder()
@property (strong) UserInfo* resultUserInfo;
@end

@implementation UserInfoBuilder
@synthesize resultUserInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUserInfo = [[UserInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUserInfo;
}
- (UserInfoBuilder*) clear {
  self.resultUserInfo = [[UserInfo alloc] init];
  return self;
}
- (UserInfoBuilder*) clone {
  return [UserInfo builderWithPrototype:resultUserInfo];
}
- (UserInfo*) defaultInstance {
  return [UserInfo defaultInstance];
}
- (UserInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserInfo*) buildPartial {
  UserInfo* returnMe = resultUserInfo;
  self.resultUserInfo = nil;
  return returnMe;
}
- (UserInfoBuilder*) mergeFrom:(UserInfo*) other {
  if (other == [UserInfo defaultInstance]) {
    return self;
  }
  if (other.hasAcctId) {
    [self setAcctId:other.acctId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAcctId:[input readInt64]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        UserStatus value = (UserStatus)[input readEnum];
        if (UserStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasAcctId {
  return resultUserInfo.hasAcctId;
}
- (SInt64) acctId {
  return resultUserInfo.acctId;
}
- (UserInfoBuilder*) setAcctId:(SInt64) value {
  resultUserInfo.hasAcctId = YES;
  resultUserInfo.acctId = value;
  return self;
}
- (UserInfoBuilder*) clearAcctId {
  resultUserInfo.hasAcctId = NO;
  resultUserInfo.acctId = 0L;
  return self;
}
- (BOOL) hasName {
  return resultUserInfo.hasName;
}
- (NSString*) name {
  return resultUserInfo.name;
}
- (UserInfoBuilder*) setName:(NSString*) value {
  resultUserInfo.hasName = YES;
  resultUserInfo.name = value;
  return self;
}
- (UserInfoBuilder*) clearName {
  resultUserInfo.hasName = NO;
  resultUserInfo.name = @"";
  return self;
}
- (BOOL) hasStatus {
  return resultUserInfo.hasStatus;
}
- (UserStatus) status {
  return resultUserInfo.status;
}
- (UserInfoBuilder*) setStatus:(UserStatus) value {
  resultUserInfo.hasStatus = YES;
  resultUserInfo.status = value;
  return self;
}
- (UserInfoBuilder*) clearStatus {
  resultUserInfo.hasStatus = NO;
  resultUserInfo.status = UserStatusOffline;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
